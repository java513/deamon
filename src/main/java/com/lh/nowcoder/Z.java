package com.lh.nowcoder;

/**
 * 1.父类静态代码块 （  java虚拟机加载类时，就会执行该块代码，故只执行一次）
 * 2 .子类静态代码块 （  java虚拟机加载类时，就会执行该块代码，故只执行一次）
 * 3. 父类属性对象初始化
 * 4.父类普通代码块（每次new,每次执行 ）
 * 5. 父类构造函数（每次new,每次执行）
 * 6.子 类 属性对象初始化
 * 7.子类普通代码块（每次new,每次执行 ）
 * 8.子 类构造函数（每次new,每次执行）
 */
class X {
    Y y = new Y();

    public X() {
        System.out.print("X");
    }
}

class Y {
    public Y() {
        System.out.print("Y");
    }
}

public class Z extends X {
    Y y = new Y();

    public Z() {
        System.out.print("Z");
    }
    /**
     初始化过程：
     1. 初始化父类中的静态成员变量和静态代码块 ；
     2. 初始化子类中的静态成员变量和静态代码块 ；
     3.初始化父类的普通成员变量和代码块，再执行父类的构造方法；
     4.初始化子类的普通成员变量和代码块，再执行子类的构造方法；

     （1）初始化父类的普通成员变量和代码块，执行  Y y=new Y();  输出Y
     （2）再执行父类的构造方法；输出X
     （3） 初始化子类的普通成员变量和代码块，执行  Y y=new   Y();  输出Y
     （4）再执行子类的构造方法；输出Z
     所以输出YXYZ
     */

    /**
     *  涉及继承：
     *  a.初始化父类中的静态成员变量和静态代码块
     *  b.初始化子类中的静态成员变量和静态代码块
     *  c.初始化父类的普通成员变量和构造代码块(按次序)，再执行父类的构造方法
     *  d.初始化子类的普通成员变量和构造代码块(按次序)，再执行子类的构造方法
     */
    public static void main(String[] args) {
        new Z();  //YXYZ
    }
    //转发(Forward) 重定向(Redirect)
}

